// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// rollMeanC
NumericVector rollMeanC(NumericVector x, int k, char type);
RcppExport SEXP _surveysd_rollMeanC(SEXP xSEXP, SEXP kSEXP, SEXP typeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< char >::type type(typeSEXP);
    rcpp_result_gen = Rcpp::wrap(rollMeanC(x, k, type));
    return rcpp_result_gen;
END_RCPP
}
// rollSumC
NumericVector rollSumC(NumericVector x, int k, char type);
RcppExport SEXP _surveysd_rollSumC(SEXP xSEXP, SEXP kSEXP, SEXP typeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< char >::type type(typeSEXP);
    rcpp_result_gen = Rcpp::wrap(rollSumC(x, k, type));
    return rcpp_result_gen;
END_RCPP
}
// weightedRatio
double weightedRatio(NumericVector x, NumericVector w);
RcppExport SEXP _surveysd_weightedRatio(SEXP xSEXP, SEXP wSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type w(wSEXP);
    rcpp_result_gen = Rcpp::wrap(weightedRatio(x, w));
    return rcpp_result_gen;
END_RCPP
}
// weightedSum
double weightedSum(NumericVector x, NumericVector w);
RcppExport SEXP _surveysd_weightedSum(SEXP xSEXP, SEXP wSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type w(wSEXP);
    rcpp_result_gen = Rcpp::wrap(weightedSum(x, w));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_surveysd_rollMeanC", (DL_FUNC) &_surveysd_rollMeanC, 3},
    {"_surveysd_rollSumC", (DL_FUNC) &_surveysd_rollSumC, 3},
    {"_surveysd_weightedRatio", (DL_FUNC) &_surveysd_weightedRatio, 2},
    {"_surveysd_weightedSum", (DL_FUNC) &_surveysd_weightedSum, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_surveysd(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
